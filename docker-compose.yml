services:
  mysql:
    image: mysql:8.0
    container_name: bachata_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: bachata_feedback
      MYSQL_USER: bachata_user
      MYSQL_PASSWORD: bachata_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10

  minio:
    image: minio/minio:latest
    container_name: bachata_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadminpass
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped

  # Авто-создание бакета bf-media в MinIO
  minio-setup:
    image: minio/mc:latest
    container_name: bachata_minio_setup
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c " /usr/bin/mc alias set local http://minio:9000 minioadmin minioadminpass && /usr/bin/mc mb -p local/bf-media || true && /usr/bin/mc anonymous set download local/bf-media || true && echo 'MinIO bucket bf-media ready' "
    restart: "no"

  clamav:
    image: clamav/clamav:stable
    container_name: bachata_clamav
    ports:
      - "3310:3310"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: bachata_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 10s
      timeout: 5s
      retries: 10

  bachatafeedback.api:
    image: ${DOCKER_REGISTRY-}bachatafeedbackapi
    container_name: bachata_api
    build:
      context: .
      dockerfile: BachataFeedback.Api/Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
      minio-setup:
        condition: service_started
      clamav:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      # DB
      ConnectionStrings__DefaultConnection: "Server=mysql;Database=bachata_feedback;User Id=bachata_user;Password=bachata_pass;AllowUserVariables=true;UseAffectedRows=false;"
      # Storage (MinIO)
      Storage__Provider: Minio
      Storage__Endpoint: minio:9000
      Storage__AccessKey: minioadmin
      Storage__SecretKey: minioadminpass
      Storage__Bucket: bf-media
      Storage__UseSSL: "false"
      # Antivirus (ClamAV)
      Antivirus__ClamAV__Host: clamav
      Antivirus__ClamAV__Port: 3310
      # Upload limits
      Uploads__MaxSizeMb: 10
      Uploads__AllowedTypes__0: image/jpeg
      Uploads__AllowedTypes__1: image/png
      Uploads__AllowedTypes__2: image/webp
      # RabbitMQ для API (продюсер очереди)
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__User: guest
      RabbitMQ__Password: guest
      RabbitMQ__Exchange: moderation
      RabbitMQ__Queue: moderation.jobs
    restart: unless-stopped

  worker:
    container_name: bachata_worker
    build:
      context: .
      dockerfile: BachataFeedback.Worker/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Server=mysql;Database=bachata_feedback;User Id=bachata_user;Password=bachata_pass;AllowUserVariables=true;UseAffectedRows=false;"
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__User: guest
      RabbitMQ__Password: guest
      RabbitMQ__Exchange: moderation
      RabbitMQ__Queue: moderation.jobs
      RabbitMQ__PollDelayMs: 1000
      # LM Studio
      # Для Docker Desktop/Windows/macOS:
      LLM__BaseUrl: http://host.docker.internal:1234
      LLM__Model: qwen/qwen3-14b
      LLM__MaxTokens: 2048
      LLM__Temperature: 0
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    # Чтобы host.docker.internal работал на Linux (host-gateway)
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # Опционально: Adminer для быстрого просмотра БД
  adminer:
    image: adminer
    container_name: bachata_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy

  seeder:
    container_name: bachata_seeder
    build:
      context: .
      dockerfile: BachataFeedback.Seeder/Dockerfile
    profiles: ["seeder"]
    environment:
      SEEDER__API_BASE_URL: https://api-bachata.alexei.site/api
      SEEDER__ADMIN_EMAIL: llm@bachata.admin
      SEEDER__ADMIN_PASSWORD: LLMADM
      SEEDER__USERS_MEDIA_DIR: /seed-media/users
      SEEDER__EVENTS_MEDIA_DIR: /seed-media/events
      SEEDER__USERS: 25
      SEEDER__EVENTS: 5
      SEEDER__REVIEWS_PER_USER: 5
      SEEDER__EVENT_REVIEWS_PER_EVENT: 10
      SEEDER__LLM_TIMEOUT_SEC: 300
      SEEDER__USERS_BATCH: 3
      SEEDER__EVENTS_BATCH: 3
      SEEDER__LLM_BASE_URL: http://host.docker.internal:1234
      SEEDER__LLM_MODEL: qwen/qwen3-14b
    volumes:
      - ./seed-media:/seed-media:ro
    depends_on:
      bachatafeedback.api:
        condition: service_started
    restart: "no"

volumes:
  mysql_data:
  minio_data:
  rabbitmq_data:
